[{"/Users/andonghyun/Documents/apollo-2021/src/index.js":"1","/Users/andonghyun/Documents/apollo-2021/src/components/App.js":"2","/Users/andonghyun/Documents/apollo-2021/src/routes/Detail.js":"3","/Users/andonghyun/Documents/apollo-2021/src/routes/Home.js":"4","/Users/andonghyun/Documents/apollo-2021/src/apollo.js":"5","/Users/andonghyun/Documents/apollo-2021/src/components/Movie.js":"6"},{"size":305,"mtime":1609768707955,"results":"7","hashOfConfig":"8"},{"size":325,"mtime":1609766493601,"results":"9","hashOfConfig":"8"},{"size":2327,"mtime":1609860819399,"results":"10","hashOfConfig":"8"},{"size":1682,"mtime":1609944263198,"results":"11","hashOfConfig":"8"},{"size":401,"mtime":1609944528525,"results":"12","hashOfConfig":"8"},{"size":1074,"mtime":1609944976407,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"h39ui7",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/andonghyun/Documents/apollo-2021/src/index.js",[],["28","29"],"/Users/andonghyun/Documents/apollo-2021/src/components/App.js",[],"/Users/andonghyun/Documents/apollo-2021/src/routes/Detail.js",["30"],"import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { gql, useQuery } from \"@apollo/client\"\nimport styled from \"styled-components\";\n\nconst GET_MOVIE = gql`\n    query getMovie($id: Int!) {\n        movie(id: $id) {\n            title\n            medium_cover_image\n            language\n            rating\n            description_intro\n        }\n        suggestions(id: $id) {\n            id\n            medium_cover_image\n        }\n    }\n`\n\nconst Container = styled.div`\n   height: 100vh;\n   background-image: linear-gradient(-45deg, #d754ab, #fd723a);\n   width: 100%;\n   display: flex;\n   justify-content: space-around;\n   align-items: center;\n   color: white;\n `;\n\n const Column = styled.div`\n   margin-left: 10px;\n   width: 50%;\n `;\n\n const Title = styled.h1`\n   font-size: 65px;\n   margin-bottom: 15px;\n `;\n\n const Subtitle = styled.h4`\n   font-size: 35px;\n   margin-bottom: 10px;\n `;\n\n const Description = styled.p`\n   font-size: 28px;\n `;\n\n const Poster = styled.div`\n   width: 25%;\n   height: 60%;\n   background-color: transparent;\n   background-image: url(${props => props.bg});\n   background-size: cover;\n   background-position: center center;\n `;\n\n const Suggestion = styled.div`\n   display: grid;\n   grid-template-columns: repeat(4, 1fr);\n   grid-gap: 25px;\n   width: 25%;\n   height: 60%;\n   background-color: transparent;\n   background-image: url(${props => props.bg});\n   background-size: cover;\n   background-position: center center;\n `;\n\nexport default () => {\n    const { id } = useParams();\n    const { loading, data } = useQuery(GET_MOVIE, {\n        variables: { id: +id }\n    });\n    console.log(data?.suggestions)\n    return (\n        <Container>\n          <Column>\n            <Title>{loading ? \"Loading...\" : data.movie.title}</Title>\n                <Subtitle>{data?.movie?.language} Â· {data?.movie?.rating}</Subtitle>\n                <Description>{data?.movie?.description_intro}</Description>\n                <div>{data?.suggestions?.map(s => <Suggestion key={s.id} id={s.id} bg = {s.medium_cover_image} />)}</div>\n          </Column>\n          <Poster bg = {data?.movie?.medium_cover_image}></Poster>\n        </Container>\n      );\n\n    // if (loading) {\n    //     return \"loading...\";\n    // } \n    // if (data && data.movie) {\n    //     return data.movie.title;\n    // }\n}","/Users/andonghyun/Documents/apollo-2021/src/routes/Home.js",["31","32","33"],"/Users/andonghyun/Documents/apollo-2021/src/apollo.js",[],"/Users/andonghyun/Documents/apollo-2021/src/components/Movie.js",["34"],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":72,"column":1,"nodeType":"41","endLine":96,"endColumn":2},{"ruleId":"42","severity":1,"message":"43","line":40,"column":7,"nodeType":"44","messageId":"45","endLine":40,"endColumn":14},{"ruleId":"39","severity":1,"message":"40","line":58,"column":1,"nodeType":"41","endLine":75,"endColumn":2},{"ruleId":"42","severity":1,"message":"46","line":59,"column":13,"nodeType":"44","messageId":"45","endLine":59,"endColumn":20},{"ruleId":"39","severity":1,"message":"40","line":28,"column":2,"nodeType":"41","endLine":38,"endColumn":3},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'Loading' is assigned a value but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]